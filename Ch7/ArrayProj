/*
One class to test all 3 methods(#1, #10, #14):

1.)
Write a method called lastIndexOf that accepts an array of integers and an 
integer value as its parameters and returns the last index at which the value 
occurs in the array. The method should return â€“1 if the value is not found. For 
example, in the array {74, 85, 102, 99, 101, 85, 56}, the last index of the 
value 85 is 5.

10.)
Write a method called percentEven that accepts an array of integers as a 
parameter and returns the percentage of even numbers in the array as a real 
number. For example, if the array stores the elements {6, 2, 9, 11, 3}, then 
your method should return 40.0. If the array contains no even elements or no 
elements at all, return 0.0.

14.)
Write a method called contains that accepts two arrays of integers a1 and a2 as 
parameters and that returns a boolean value indicating whether or not the 
sequence of elements in a2 appears in a1 (true for yes, false for no). The 
sequence must appear consecutively and in the same order. For example, consider 
the following arrays:

int[] list1 = {1, 6, 2, 1, 4, 1, 2, 1, 8};
int[] list2 = {1, 2, 1};

The call of contains(list1, list2) should return true because the sequence of 
values in list2 {1, 2, 1} is contained in list1 starting at index 5. If list2 
had stored the values {2, 1, 2}, the call of contains(list1, list2) would 
return false. Any two lists with identical elements are considered to contain 
each other. Every array contains the empty array, and the empty array does not 
contain any arrays other than the empty array itself.

Amisha Jain
AP CSA P2
12-05-19

*/















